Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.1.217 Build 20200306

Compiler options: -I/home/training/dd-20-28-28/aom/third_party/googletest/src/googletest/include -I/home/training/dd-20-28-28/aom/third_party/googletest/src/googletest -I/home/training/dd-20-28-28/aom -I/home/training/dd-20-28-28/aom-build -I/home/training/dd-20-28-28/aom/apps -I/home/training/dd-20-28-28/aom/common -I/home/training/dd-20-28-28/aom/examples -I/home/training/dd-20-28-28/aom/stats -I/home/training/dd-20-28-28/aom/third_party/libyuv/include -I/home/training/dd-20-28-28/aom/third_party/libwebm -march=native -O2 -g -DNDEBUG -std=c99 -Wall -Wdisabled-optimization -Wextra -Wfloat-conversion -Wimplicit-function-declaration -Wpointer-arith -Wshorten-64-to-32 -Wsign-compare -Wtype-limits -Wuninitialized -Wunused -Wvla -Wshadow -Wundef -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -qopt-report=4 -qopt-report-phase=vec,loop -qopenmp-simd -o CMakeFiles/aom_av1_common.dir/av1/common/convolve.c.o -c

Begin optimization report for: av1_convolve_horiz_rs_c(const uint8_t *, int, uint8_t *, int, int, int, const int16_t *, int, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(31,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(33,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between x_filter[k] (42:9) and dst[x] (43:7)

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(41,7)
         remark #25436: completely unrolled by 8   (pre-vector) 
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_convolve_horiz_rs_c(const uint16_t *, int, uint16_t *, int, int, int, const int16_t *, int, int, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(56,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(58,5)
   <Predicate Optimized v1>
      remark #25422: Invariant Condition at line 81 hoisted out of this loop
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between x_filter[k] (67:9) and dst[x] (68:7)

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(66,7)
         remark #25436: completely unrolled by 8   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(58,5)
   <Predicate Optimized v3>
      remark #25422: Invariant Condition at line 81 hoisted out of this loop
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between x_filter[k] (67:9) and dst[x] (68:7)
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(58,5)
   <Predicate Optimized v4>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between x_filter[k] (67:9) and dst[x] (68:7)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_convolve_2d_sobel_y_c(const uint8_t *, int, double *, int, int, int, int, double)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(91,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(92,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=31
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(92,5)
      remark #15389: vectorization support: reference src_horiz[y*src_stride+x-1+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(95,30) ]
      remark #15389: vectorization support: reference src_horiz[y*src_stride+x-1+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(95,30) ]
      remark #15389: vectorization support: reference src_horiz[y*src_stride+x-1+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(95,30) ]
      remark #15389: vectorization support: reference im_block[y*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(97,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 32
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 3 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 21 
      remark #15477: vector cost: 1.870 
      remark #15478: estimated potential speedup: 10.940 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(94,7)
         remark #25436: completely unrolled by 3   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(92,5)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference src_horiz[y*src_stride+x-1+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(95,30) ]
      remark #15389: vectorization support: reference src_horiz[y*src_stride+x-1+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(95,30) ]
      remark #15389: vectorization support: reference src_horiz[y*src_stride+x-1+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(95,30) ]
      remark #15389: vectorization support: reference im_block[y*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(97,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.658
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 3 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 21 
      remark #15477: vector cost: 1.870 
      remark #15478: estimated potential speedup: 10.940 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(92,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(104,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(105,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(105,5)
      remark #15389: vectorization support: reference &im_block[w][(y-1+k)*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(108,30) ]
      remark #15389: vectorization support: reference &im_block[w][(y-1+k)*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(108,30) ]
      remark #15389: vectorization support: reference &im_block[w][(y-1+k)*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(108,30) ]
      remark #15388: vectorization support: reference dst[y*dst_stride+x] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(110,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.510
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 3 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 23 
      remark #15477: vector cost: 3.180 
      remark #15478: estimated potential speedup: 5.650 
      remark #15487: type converts: 1 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(107,7)
         remark #25436: completely unrolled by 3   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(105,5)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference &im_block[w][(y-1+k)*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(108,30) ]
      remark #15389: vectorization support: reference &im_block[w][(y-1+k)*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(108,30) ]
      remark #15389: vectorization support: reference &im_block[w][(y-1+k)*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(108,30) ]
      remark #15389: vectorization support: reference dst[y*dst_stride+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(110,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.684
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 3 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 23 
      remark #15477: vector cost: 3.180 
      remark #15478: estimated potential speedup: 5.650 
      remark #15487: type converts: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(105,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_convolve_2d_sr_c(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(135,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(136,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(138,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(138,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(139,16) ]
         remark #15389: vectorization support: reference src_horiz[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(139,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 2.412
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(137,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 0.530 
         remark #15478: estimated potential speedup: 4.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(138,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(152,3)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(153,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(156,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <&im_block[fo_vert*w][(y-fo_vert+k)*w+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(156,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(154,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.370 
         remark #15478: estimated potential speedup: 1.470 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(152,3)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(153,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(156,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <&im_block[fo_vert*w][(y-fo_vert+k)*w+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(156,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(154,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.370 
         remark #15478: estimated potential speedup: 1.470 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_convolve_y_sr_c(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(185,3)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(186,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(189,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src[(y-fo_vert+k)*src_stride+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(189,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.493
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(187,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 4.430 
         remark #15478: estimated potential speedup: 1.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(185,3)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(186,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(189,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src[(y-fo_vert+k)*src_stride+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(189,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.493
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(187,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 4.430 
         remark #15478: estimated potential speedup: 1.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_convolve_x_sr_c(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(217,3)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(218,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(221,16) ]
         remark #15389: vectorization support: reference src[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(221,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 2.412
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(219,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 0.530 
         remark #15478: estimated potential speedup: 4.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(217,3)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(218,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(221,16) ]
         remark #15389: vectorization support: reference src[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(221,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 2.412
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(219,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 0.530 
         remark #15478: estimated potential speedup: 4.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_convolve_2d_copy_sr_c(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(241,3)
   remark #15527: loop was not vectorized: function call to memmove(void *, const void *, size_t) cannot be vectorized   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(242,5) ]
LOOP END
===========================================================================

Begin optimization report for: av1_dist_wtd_convolve_2d_c(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(270,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(271,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(274,11)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(274,11)
         remark #15389: vectorization support: reference im_block[y*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(275,15) ]
         remark #15389: vectorization support: reference im_block[y*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(275,15) ]
         remark #15389: vectorization support: reference src_horiz[y*src_stride+x-fo_horiz_k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(275,60) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 0.938
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 10 
         remark #15477: vector cost: 0.500 
         remark #15478: estimated potential speedup: 19.010 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(274,11)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference im_block[y*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(275,15) ]
         remark #15389: vectorization support: reference im_block[y*w+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(275,15) ]
         remark #15389: vectorization support: reference src_horiz[y*src_stride+x-fo_horiz_k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(275,60) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.538
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 10 
         remark #15477: vector cost: 0.500 
         remark #15478: estimated potential speedup: 19.010 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(274,11)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(282,3)
   remark #15388: vectorization support: reference im_block[i] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(283,7) ]
   remark #15388: vectorization support: reference im_block[i] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(283,30) ]
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.056
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 9 
   remark #15477: vector cost: 1.120 
   remark #15478: estimated potential speedup: 7.990 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=540
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(282,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference im_block[i] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(283,7) ]
   remark #15388: vectorization support: reference im_block[i] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(283,30) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 9 
   remark #15477: vector cost: 1.120 
   remark #15478: estimated potential speedup: 7.990 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=2160
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(282,3)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=17280
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(296,3)
   remark #15388: vectorization support: reference im_block2[i] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(297,7) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.083
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 5.330 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=540
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(296,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference im_block2[i] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(297,7) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 5.330 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=2160
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(296,3)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=17280
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(300,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(303,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(305,11)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(305,11)
         remark #15388: vectorization support: reference im_block2[y_dst+x] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(306,15) ]
         remark #15388: vectorization support: reference im_block2[y_dst+x] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(306,15) ]
         remark #15389: vectorization support: reference &im_block[fo_vert*w][k_idx+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(306,53) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.233
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 9 
         remark #15477: vector cost: 0.930 
         remark #15478: estimated potential speedup: 9.430 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(305,11)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference im_block2[y_dst+x] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(306,15) ]
         remark #15388: vectorization support: reference im_block2[y_dst+x] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(306,15) ]
         remark #15389: vectorization support: reference &im_block[fo_vert*w][k_idx+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(306,53) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.556
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 9 
         remark #15477: vector cost: 0.930 
         remark #15478: estimated potential speedup: 9.430 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(305,11)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(313,11)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(315,15)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(315,15)
      remark #15389: vectorization support: reference dst[y*dst_stride+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(321,19) ]
      remark #15389: vectorization support: reference dst16[y_dst+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(316,33) ]
      remark #15389: vectorization support: reference im_block2[y_dst+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(317,23) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.596
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 38 
      remark #15477: vector cost: 3.560 
      remark #15478: estimated potential speedup: 10.560 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(315,15)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference dst[y*dst_stride+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(321,19) ]
      remark #15389: vectorization support: reference dst16[y_dst+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(316,33) ]
      remark #15389: vectorization support: reference im_block2[y_dst+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(317,23) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.800
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(315,15)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(313,11)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(315,15)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between conv_params->round_1 (321:19) and dst[y*dst_stride+x] (321:19)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(315,15)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(328,11)
   remark #15313: simd loop was not vectorized: unsupported data type
   remark #15552: loop was not vectorized with "simd"

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(330,15)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between conv_params->round_1 (334:19) and dst[y*dst_stride+x] (336:19)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(330,15)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(342,7)
   remark #15389: vectorization support: reference dst16[i] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(343,11) ]
   remark #15388: vectorization support: reference im_block2[i] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(343,22) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.167
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 0.930 
   remark #15478: estimated potential speedup: 8.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=540
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(342,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference dst16[i] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(343,11) ]
   remark #15388: vectorization support: reference im_block2[i] has aligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(343,22) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 0.930 
   remark #15478: estimated potential speedup: 8.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=2160
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(342,7)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=17280
LOOP END
===========================================================================

Begin optimization report for: av1_dist_wtd_convolve_y_c(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(370,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(371,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(373,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(373,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(374,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src[(y-fo_vert+k)*src_stride+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(374,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.493
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(374,9) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 4.430 
         remark #15478: estimated potential speedup: 1.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(373,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_dist_wtd_convolve_x_c(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(420,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(421,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(423,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(423,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(424,16) ]
         remark #15389: vectorization support: reference src[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(424,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 2.412
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(424,9) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 0.530 
         remark #15478: estimated potential speedup: 4.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(423,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_dist_wtd_convolve_2d_copy_c(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(468,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(469,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between src[y*src_stride+x] (471:7) and dst16[y*dst16_stride+x] (485:9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(469,5)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_convolve_2d_scale_c(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, const int, const int, ConvolveParams *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(513,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 1 3 2 ) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(515,5)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(522,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(522,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(523,16) ]
         remark #15389: vectorization support: reference src_x[k-fo_horiz] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(523,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 2.412
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(521,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 0.530 
         remark #15478: estimated potential speedup: 4.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(522,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(535,3)
   remark #25445: Loop Interchange not done due to: Data Dependencies
   remark #25446: Dependencies found between following statements:  [From_Line# -> (Dependency Type) To_Line#]
   remark #25447: Dependence found between following statements:  [548 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [548 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [549 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [549 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [550 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [550 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [551 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [551 -> (Anti) 564]
   remark #25447: Dependence found between following statements:  [551 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [552 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [552 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [554 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [554 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [562 -> (Output) 570]
   remark #25447: Dependence found between following statements:  [562 -> (Output) 564]
   remark #25447: Dependence found between following statements:  [562 -> (Output) 562]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 554]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 552]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 551]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 550]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 549]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 548]
   remark #25447: Dependence found between following statements:  [564 -> (Output) 570]
   remark #25447: Dependence found between following statements:  [564 -> (Output) 564]
   remark #25447: Dependence found between following statements:  [564 -> (Output) 562]
   remark #25447: Dependence found between following statements:  [564 -> (Flow) 551]
   remark #25447: Dependence found between following statements:  [570 -> (Output) 570]
   remark #25447: Dependence found between following statements:  [570 -> (Output) 564]
   remark #25447: Dependence found between following statements:  [570 -> (Output) 562]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 554]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 552]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 551]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 550]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 549]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 548]
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(537,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(544,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(544,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(545,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src_y[(k-fo_vert)*w]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(545,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(543,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.370 
         remark #15478: estimated potential speedup: 1.470 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(544,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_convolve_2d_facade(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams **, const int, int, const int, int, int, ConvolveParams *, const struct scale_factors *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(135,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(136,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(138,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(138,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(139,16) ]
         remark #15389: vectorization support: reference src_horiz[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(139,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 2.412
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(137,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 0.530 
         remark #15478: estimated potential speedup: 4.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(138,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(152,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(153,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(156,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <&im_block[fo_vert*w][(y-fo_vert+k)*w+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(156,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(154,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.370 
         remark #15478: estimated potential speedup: 1.470 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(152,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(153,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(156,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <&im_block[fo_vert*w][(y-fo_vert+k)*w+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(156,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(154,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.370 
         remark #15478: estimated potential speedup: 1.470 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(155,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(613,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(217,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(618,7)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(218,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(618,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(618,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(618,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(221,16) ]
         remark #15389: vectorization support: reference src[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(221,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 2.412
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(219,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 0.530 
         remark #15478: estimated potential speedup: 4.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(618,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(217,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(618,7)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(218,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(618,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(618,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(618,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(221,16) ]
         remark #15389: vectorization support: reference src[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(221,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 2.412
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(219,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 0.530 
         remark #15478: estimated potential speedup: 4.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(220,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(618,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(185,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(623,7)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(186,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(623,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(623,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(623,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(189,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src[(y-fo_vert+k)*src_stride+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(189,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.493
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(187,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 4.430 
         remark #15478: estimated potential speedup: 1.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(623,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(185,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(623,7)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(186,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(623,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(623,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(623,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(189,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src[(y-fo_vert+k)*src_stride+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(189,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.493
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(187,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 4.430 
         remark #15478: estimated potential speedup: 1.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(188,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(623,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(513,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(631,5)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 1 3 2 ) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(515,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(631,5)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(522,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(631,5)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(522,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(631,5)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(523,16) ]
         remark #15389: vectorization support: reference src_x[k-fo_horiz] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(523,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 2.412
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(521,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 0.530 
         remark #15478: estimated potential speedup: 4.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(522,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(631,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(535,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(631,5)
   remark #25445: Loop Interchange not done due to: Data Dependencies
   remark #25446: Dependencies found between following statements:  [From_Line# -> (Dependency Type) To_Line#]
   remark #25447: Dependence found between following statements:  [548 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [548 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [549 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [549 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [550 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [550 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [551 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [551 -> (Anti) 564]
   remark #25447: Dependence found between following statements:  [551 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [552 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [552 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [554 -> (Anti) 570]
   remark #25447: Dependence found between following statements:  [554 -> (Anti) 562]
   remark #25447: Dependence found between following statements:  [562 -> (Output) 570]
   remark #25447: Dependence found between following statements:  [562 -> (Output) 564]
   remark #25447: Dependence found between following statements:  [562 -> (Output) 562]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 554]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 552]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 551]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 550]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 549]
   remark #25447: Dependence found between following statements:  [562 -> (Flow) 548]
   remark #25447: Dependence found between following statements:  [564 -> (Output) 570]
   remark #25447: Dependence found between following statements:  [564 -> (Output) 564]
   remark #25447: Dependence found between following statements:  [564 -> (Output) 562]
   remark #25447: Dependence found between following statements:  [564 -> (Flow) 551]
   remark #25447: Dependence found between following statements:  [570 -> (Output) 570]
   remark #25447: Dependence found between following statements:  [570 -> (Output) 564]
   remark #25447: Dependence found between following statements:  [570 -> (Output) 562]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 554]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 552]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 551]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 550]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 549]
   remark #25447: Dependence found between following statements:  [570 -> (Flow) 548]
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(537,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(631,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(544,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(631,5)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(544,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(631,5)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(545,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src_y[(k-fo_vert)*w]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(545,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(543,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.370 
         remark #15478: estimated potential speedup: 1.470 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(544,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(631,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_convolve_2d_copy_sr_c(const uint16_t *, int, uint16_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(654,3)
   remark #15527: loop was not vectorized: function call to memmove(void *, const void *, size_t) cannot be vectorized   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(655,5) ]
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_convolve_x_sr_c(const uint16_t *, int, uint16_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(677,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(678,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(680,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(680,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(681,16) ]
         remark #15389: vectorization support: reference src[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(681,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 2.733
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(681,9) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 0.930 
         remark #15478: estimated potential speedup: 4.260 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(680,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_convolve_y_sr_c(const uint16_t *, int, uint16_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(707,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(708,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(710,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(710,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(711,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src[(y-fo_vert+k)*src_stride+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(711,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.494
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(709,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.810 
         remark #15478: estimated potential speedup: 1.360 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(710,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_convolve_2d_sr_c(const uint16_t *, int, uint16_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(739,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(740,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(742,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(742,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(743,16) ]
         remark #15389: vectorization support: reference src_horiz[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(743,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 2.733
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(741,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 0.930 
         remark #15478: estimated potential speedup: 4.260 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(742,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(756,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(757,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(759,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(759,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(760,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <&im_block[fo_vert*w][(y-fo_vert+k)*w+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(760,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(758,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.370 
         remark #15478: estimated potential speedup: 1.470 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(759,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_dist_wtd_convolve_2d_c(const uint16_t *, int, uint16_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(793,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(794,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(796,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(796,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(797,16) ]
         remark #15389: vectorization support: reference src_horiz[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(797,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 2.733
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(795,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 0.930 
         remark #15478: estimated potential speedup: 4.260 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(796,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(811,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(812,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(814,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(814,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(815,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <&im_block[fo_vert*w][(y-fo_vert+k)*w+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(815,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(813,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.370 
         remark #15478: estimated potential speedup: 1.470 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(814,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_dist_wtd_convolve_x_c(const uint16_t *, int, uint16_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(860,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(861,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(863,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(863,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(864,16) ]
         remark #15389: vectorization support: reference src[y*src_stride+x-fo_horiz+k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(864,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 2.733
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(864,9) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 0.930 
         remark #15478: estimated potential speedup: 4.260 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(863,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_dist_wtd_convolve_y_c(const uint16_t *, int, uint16_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(909,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(910,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(912,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(912,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(913,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src[(y-fo_vert+k)*src_stride+x]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(913,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.494
         remark #15355: vectorization support: res is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(913,9) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.810 
         remark #15478: estimated potential speedup: 1.360 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(912,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_dist_wtd_convolve_2d_copy_c(const uint16_t *, int, uint16_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, ConvolveParams *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(955,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Predicate Optimized v3>
      remark #25422: Invariant Condition at line 959 hoisted out of this loop
      remark #25422: Invariant Condition at line 961 hoisted out of this loop
      remark #25422: Invariant Condition at line 81 hoisted out of this loop
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between src[y*src_stride+x] (958:7) and dst[y*dst_stride+x] (969:9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Remainder, Predicate Optimized v3>
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Predicate Optimized v5>
      remark #25422: Invariant Condition at line 81 hoisted out of this loop
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between src[y*src_stride+x] (958:7) and dst[y*dst_stride+x] (969:9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Remainder, Predicate Optimized v5>
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Predicate Optimized v6>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between src[y*src_stride+x] (958:7) and dst[y*dst_stride+x] (969:9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Remainder, Predicate Optimized v6>
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Predicate Optimized v4>
      remark #25422: Invariant Condition at line 81 hoisted out of this loop
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between src[y*src_stride+x] (958:7) and dst[y*dst_stride+x] (969:9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Remainder, Predicate Optimized v4>
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Predicate Optimized v6>
      remark #25422: Invariant Condition at line 81 hoisted out of this loop
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between src[y*src_stride+x] (958:7) and dst[y*dst_stride+x] (969:9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Remainder, Predicate Optimized v6>
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Predicate Optimized v7>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between src[y*src_stride+x] (958:7) and dst[y*dst_stride+x] (969:9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Remainder, Predicate Optimized v7>
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Peeled loop for vectorization, Predicate Optimized v2>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Predicate Optimized v2>
      remark #15389: vectorization support: reference src[y*src_stride+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(957,27) ]
      remark #15389: vectorization support: reference dst16[y*dst16_stride+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(972,9) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 1.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 0.930 
      remark #15478: estimated potential speedup: 4.500 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Remainder loop for vectorization, Predicate Optimized v2>
      remark #15389: vectorization support: reference src[y*src_stride+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(957,27) ]
      remark #15389: vectorization support: reference dst16[y*dst16_stride+x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(972,9) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 0.930 
      remark #15478: estimated potential speedup: 4.500 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(956,5)
   <Remainder loop for vectorization, Predicate Optimized v2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_convolve_2d_scale_c(const uint16_t *, int, uint16_t *, int, int, int, const InterpFilterParams *, const InterpFilterParams *, const int, const int, const int, const int, ConvolveParams *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(998,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 1 3 2 ) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1000,5)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1007,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1007,7)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1008,16) ]
         remark #15389: vectorization support: reference src_x[k-fo_horiz] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1008,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 2.733
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1006,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 0.930 
         remark #15478: estimated potential speedup: 4.260 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1007,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1020,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 2 3 1 ) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1022,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1029,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1029,7)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1030,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src_y[(k-fo_vert)*w]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1030,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1028,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.370 
         remark #15478: estimated potential speedup: 1.470 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1029,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_convolve_2d_facade(const uint8_t *, int, uint8_t *, int, int, int, const InterpFilterParams **, const int, int, const int, int, int, ConvolveParams *, const struct scale_factors *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(998,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1088,5)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 1 3 2 ) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1000,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1088,5)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1007,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1088,5)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1007,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1088,5)
         remark #15389: vectorization support: reference x_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1008,16) ]
         remark #15389: vectorization support: reference src_x[k-fo_horiz] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1008,30) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 2.733
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1006,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 0.930 
         remark #15478: estimated potential speedup: 4.260 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1007,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1088,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1020,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1088,5)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 2 3 1 ) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1022,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1088,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1029,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1088,5)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1029,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1088,5)
         remark #15389: vectorization support: reference y_filter[k] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1030,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <src_y[(k-fo_vert)*w]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1030,30) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15355: vectorization support: sum is int type reduction   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1028,19) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.370 
         remark #15478: estimated potential speedup: 1.470 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1029,7) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1088,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_wiener_convolve_add_src_c(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, const int16_t *, int, const int16_t *, int, int, int, const ConvolveParams *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1157,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1222,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1159,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1222,3)
      remark #15389: vectorization support: reference dst[x] has unaligned access   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1165,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15328: vectorization support: indirect load was emulated for the variable <*(src_x+3)>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1162,34) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_x[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <x_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,55) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_x[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <x_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,55) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_x[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <x_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,55) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_x[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <x_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,55) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_x[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <x_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,55) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_x[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <x_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,55) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_x[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <x_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,55) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_x[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <x_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,55) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.015
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15462: unmasked indexed (or gather) loads: 17 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 98 
      remark #15477: vector cost: 147.500 
      remark #15478: estimated potential speedup: 0.660 
      remark #15487: type converts: 9 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1119,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1222,3)
         remark #25436: completely unrolled by 8   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1182,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1226,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1184,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1226,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15328: vectorization support: indirect load was emulated for the variable <*(src_y+768)>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1188,17) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_y[k*128]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <y_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,66) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_y[k*128]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <y_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,66) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_y[k*128]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <y_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,66) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_y[k*128]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <y_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,66) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_y[k*128]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <y_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,66) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_y[k*128]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <y_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,66) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_y[k*128]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <y_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,66) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <src_y[k*128]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,48) ]
      remark #15328: vectorization support: indirect load was emulated for the variable <y_filter[k]>, 64-bit indexed, part of address is nonlinearly computed   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,66) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <dst[y]>, stride is unknown to compiler   [ /home/training/dd-20-28-28/aom/av1/common/convolve.c(1192,7) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.008
      remark #15453: unmasked strided stores: 1 
      remark #15462: unmasked indexed (or gather) loads: 17 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 87 
      remark #15477: vector cost: 154.500 
      remark #15478: estimated potential speedup: 0.560 
      remark #15487: type converts: 1 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1226,3)
         remark #25436: completely unrolled by 8   (pre-vector) 
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av1_highbd_wiener_convolve_add_src_c(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, const int16_t *, int, const int16_t *, int, int, int, const ConvolveParams *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1239,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1302,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1241,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1302,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *(src_x+6) (1245:54) and dst[x] (1247:7)

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1127,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1302,3)
         remark #25436: completely unrolled by 8   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1262,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1306,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1264,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1306,3)
   <Predicate Optimized v1>
      remark #25422: Invariant Condition at line 81 hoisted out of this loop
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *(src_y+768) (1269:37) and dst[y*dst_stride] (1272:7)

      LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1136,3) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1306,3)
         remark #25436: completely unrolled by 8   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1264,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1306,3)
   <Predicate Optimized v3>
      remark #25422: Invariant Condition at line 81 hoisted out of this loop
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *(src_y+768) (1269:37) and dst[y*dst_stride] (1272:7)
   LOOP END

   LOOP BEGIN at /home/training/dd-20-28-28/aom/av1/common/convolve.c(1264,5) inlined into /home/training/dd-20-28-28/aom/av1/common/convolve.c(1306,3)
   <Predicate Optimized v4>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *(src_y+768) (1269:37) and dst[y*dst_stride] (1272:7)
   LOOP END
LOOP END
===========================================================================
